The ``1-my_list`` module
======================

Using ``MyList``
-------------------

This is an test text file.  First import
``MyList`` from the ``1-my_list`` module:

	>>> MyList = __import__('1-my_list').MyList

1. List has integer elements:

   >>> my_list = MyList()
   >>> my_list.append(1)
   >>> my_list.append(4)
   >>> my_list.append(2)
   >>> my_list.append(3)
   >>> my_list.append(5)
   >>> my_list.print_sorted()
   [1, 2, 3, 4, 5]

2. With char elements:

   >>> my_list = MyList()
   >>> my_list.append("a")
   >>> my_list.append("b")
   >>> my_list.append("z")
   >>> my_list.append("x")
   >>> my_list.print_sorted()
   ['a', 'b', 'x', 'z']


3. With String and int elements:

   >>> my_list = MyList()
   >>> my_list.append("hello")
   >>> my_list.append("1")
   >>> my_list.append("2")
   >>> my_list.print_sorted()
   ['1', '2', 'hello']

4. With only strings:

   >>> my_list = MyList()
   >>> my_list.append("hello")
   >>> my_list.append("good day")
   >>> my_list.print_sorted()
   ['good day', 'hello']

5. With float(inf):

   >>> my_list = MyList()
   >>> my_list.append(float('inf'))
   >>> my_list.append(400)
   >>> my_list.print_sorted()
   [400, inf]

6. With float(nan):

   >>> my_list = MyList()
   >>> my_list.append(float('nan'))
   >>> my_list.append(400)
   >>> my_list.print_sorted()
   [nan, 400]

7. Empty list:

   >>> my_list = MyList()
   >>> my_list.print_sorted()
   []

8. With None element:

   >>> my_list = MyList()
   >>> my_list.append(None)
   >>> my_list.append(2)
   >>> my_list.print_sorted()
   Traceback (most recent call last):
   TypeError: '<' not supported between instances of 'int' and 'NoneType'
